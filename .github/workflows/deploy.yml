name: Deploy Lumina Waitlist to GitHub Pages

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install HTML Proofer
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full
          sudo gem install html-proofer

      - name: Validate HTML structure
        run: |
          if [ ! -f "index.html" ]; then
            echo "❌ index.html not found in root directory"
            exit 1
          fi
          echo "✅ index.html found"

      - name: Run HTML Proofer
        run: |
          htmlproofer index.html \
            --allow-hash-href \
            --check-html \
            --empty-alt-ignore \
            --http-status-ignore 429 \
            --only-4xx

      - name: Create deployment package
        run: |
          # Create a clean deployment directory
          mkdir -p _site
          # Copy all necessary files for deployment
          cp index.html _site/
          # Copy other assets if they exist
          [ -f "style.css" ] && cp style.css _site/ || true
          [ -f "script.js" ] && cp script.js _site/ || true
          [ -d "assets" ] && cp -r assets _site/ || true
          [ -d "images" ] && cp -r images _site/ || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Optional: Lighthouse CI for performance monitoring
  lighthouse:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Start server in background
        run: |
          npx serve -s . -p 8080 &
          echo "Server started on port 8080"

      - name: Run Lighthouse CI
        run: |
          npx @lhci/cli@0.12.0 autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
